{"ast":null,"code":"var _jsxFileName = \"/Users/himash/Projects/Multimodal UI/ChefMate/src/NextStep.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport \"./NextStep.css\";\nimport { drawHand } from \"./utilities\";\nimport * as fp from \"fingerpose\";\nimport * as fpg from \"fingerpose-gestures\";\nimport { oneGesture, fourGesture } from \"./NewPoses\";\nimport logo from \"./assets/ChefMate.png\";\nimport { useLocation } from \"react-router-dom\";\nimport { CoffeeOutlined, DashboardOutlined, ExperimentOutlined, NumberOutlined, PlusOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Button } from \"antd\";\nfunction NextStep() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n  const {\n    state\n  } = useLocation();\n  const [selectedIngredient, setSelectedIngredient] = useState(null);\n  const [selectedType, setSelectedType] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [number, setNumber] = useState();\n  const Types = [{\n    type: 'Cups',\n    icon: /*#__PURE__*/React.createElement(CoffeeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    })\n  }, {\n    type: 'Grams (x100g)',\n    icon: /*#__PURE__*/React.createElement(DashboardOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }\n    })\n  }, {\n    type: 'Grams (x50g)',\n    icon: /*#__PURE__*/React.createElement(DashboardOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }\n    })\n  }, {\n    type: 'Peices',\n    icon: /*#__PURE__*/React.createElement(NumberOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })\n  }, {\n    type: 'Mililitres (x50ml)',\n    icon: /*#__PURE__*/React.createElement(ExperimentOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }),\n    number: 50,\n    unit: 'ml'\n  }, {\n    type: 'Tbsp',\n    icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 23\n      }\n    })\n  }, {\n    type: 'Tsp',\n    icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }\n    })\n  }];\n  const PosesToNumber = [{\n    pose: 'one-gesture',\n    number: 1\n  }, {\n    pose: 'victory',\n    number: 2\n  }, {\n    pose: 'ok',\n    number: 3\n  }, {\n    pose: 'four-gesture',\n    number: 4\n  }, {\n    pose: 'raised_hand',\n    number: 5\n  }];\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      // console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([oneGesture, fp.Gestures.VictoryGesture, fpg.Gestures.okGesture,\n        //   fourGesture,\n        fpg.Gestures.raisedHandGesture]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          //   console.log(gesture.gestures);\n\n          const confidence = gesture.gestures.map(prediction => prediction.confidence);\n          const maxConfidence = confidence.indexOf(Math.max.apply(null, confidence));\n          //   console.log(gesture.gestures[maxConfidence].name);\n          PosesToNumber.forEach(item => {\n            if (item.pose === gesture.gestures[maxConfidence].name) {\n              setNumber(item.number);\n            }\n          });\n        }\n      }\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n  const setFinalIngredients = () => {\n    let tempVariable;\n    if (selectedType === 'Grams (x100g)') {\n      tempVariable = selectedIngredient + \" \" + 100 * number + 'g';\n    } else if (selectedType === 'Grams (x50g)') {\n      tempVariable = selectedIngredient + \" \" + 50 * number + 'g';\n    } else if (selectedType === 'Mililitres (x50ml)') {\n      tempVariable = selectedIngredient + \" \" + 50 * number + 'ml';\n    } else {\n      tempVariable = selectedIngredient + \" \" + number + \" \" + selectedType;\n    }\n    console.log(tempVariable);\n    setIngredients([...ingredients, tempVariable]);\n    setSelectedIngredient(null);\n    setSelectedType(null);\n    setNumber(null);\n  };\n  useEffect(() => {\n    runHandpose();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NextStep\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Logo\",\n    style: {\n      width: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 500,\n      width: 300,\n      position: 'absolute',\n      right: 10,\n      border: '2px solid #B34D2D',\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#B34D2D',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"Ingredients\"), ingredients.map(ingredient => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#B34D2D',\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, ingredient)), state.length === ingredients.length && /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      background: '#B34D2D',\n      position: 'absolute',\n      bottom: 0,\n      width: '80%',\n      margin: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Set Instructions\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#B34D2D',\n      fontSize: '20px',\n      margin: 20,\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"Input the amount of each ingredient.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 53\n    }\n  }), \" Select each ingredient and type of input.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 100\n    }\n  }), \"Input the number with your fingers.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#426B1F',\n      fontSize: '20px',\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Select the Ingredient\"), state.map(ingredient => selectedIngredient === ingredient ? /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      background: '#426B1F',\n      width: '150px',\n      marginRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, ingredient) : /*#__PURE__*/React.createElement(Button, {\n    style: {\n      color: '#426B1F',\n      borderColor: '#426B1F',\n      marginRight: '20px',\n      width: '150px'\n    },\n    onClick: () => {\n      setSelectedIngredient(ingredient);\n      setSelectedType(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, ingredient)), selectedIngredient && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#426B1F',\n      fontSize: '20px',\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, \"Select the Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 800,\n      transform: 'translate(40%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, Types.map(item => selectedType === item.type ? /*#__PURE__*/React.createElement(Button, {\n    icon: item.icon,\n    type: \"primary\",\n    style: {\n      background: '#426B1F',\n      width: '150px',\n      marginRight: '20px',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, item.type) : /*#__PURE__*/React.createElement(Button, {\n    icon: item.icon,\n    onClick: () => setSelectedType(item.type),\n    style: {\n      color: '#426B1F',\n      borderColor: '#426B1F',\n      marginRight: '20px',\n      width: '150px',\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, item.type)))), selectedType !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Canvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 31\n      }\n    }),\n    style: {\n      color: '#426B1F',\n      borderColor: '#426B1F',\n      marginRight: '20px',\n      width: '150px',\n      marginTop: 20\n    },\n    onClick: () => setFinalIngredients(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, \"Add \", number)) : \"\");\n}\nexport default NextStep;","map":{"version":3,"names":["React","useRef","useState","useEffect","tf","handpose","Webcam","drawHand","fp","fpg","oneGesture","fourGesture","logo","useLocation","CoffeeOutlined","DashboardOutlined","ExperimentOutlined","NumberOutlined","PlusOutlined","SearchOutlined","Button","NextStep","webcamRef","canvasRef","state","selectedIngredient","setSelectedIngredient","selectedType","setSelectedType","ingredients","setIngredients","number","setNumber","Types","type","icon","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","unit","PosesToNumber","pose","runHandpose","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","length","GE","GestureEstimator","Gestures","VictoryGesture","okGesture","raisedHandGesture","gesture","estimate","landmarks","gestures","undefined","confidence","map","prediction","maxConfidence","indexOf","Math","max","apply","forEach","item","name","ctx","getContext","setFinalIngredients","tempVariable","className","src","alt","style","position","right","border","display","flexDirection","textAlign","color","fontSize","ingredient","marginTop","background","bottom","margin","fontWeight","marginRight","borderColor","onClick","transform","ref","marginLeft","left","zindex"],"sources":["/Users/himash/Projects/Multimodal UI/ChefMate/src/NextStep.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport \"./NextStep.css\";\nimport { drawHand } from \"./utilities\";\n\nimport * as fp from \"fingerpose\";\nimport * as fpg from \"fingerpose-gestures\";\n\nimport { oneGesture , fourGesture } from \"./NewPoses\";\nimport logo from \"./assets/ChefMate.png\"\nimport { useLocation } from \"react-router-dom\";\nimport { CoffeeOutlined ,DashboardOutlined,ExperimentOutlined,NumberOutlined,PlusOutlined,SearchOutlined} from '@ant-design/icons';\n\nimport { Button } from \"antd\";\n\n\nfunction NextStep() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const {state} = useLocation();\n  const [selectedIngredient,setSelectedIngredient]= useState(null);\n  const [selectedType,setSelectedType]= useState(null);\n  const [ingredients,setIngredients]=useState([]);\n\n  const [number, setNumber] = useState();\n\n  const Types =[\n    {type:'Cups',icon:<CoffeeOutlined />},\n    {type:'Grams (x100g)',icon:<DashboardOutlined />},\n    {type:'Grams (x50g)',icon:<DashboardOutlined />},\n    {type:'Peices',icon:<NumberOutlined />},\n    {type:'Mililitres (x50ml)',icon:<ExperimentOutlined />,number:50,unit:'ml'},\n    {type:'Tbsp',icon:<SearchOutlined />},\n    {type:'Tsp',icon:<SearchOutlined />}\n  ]\n\n  const PosesToNumber = [\n    {pose:'one-gesture',number:1},\n    {pose:'victory',number:2},\n    {pose:'ok',number:3},\n    {pose:'four-gesture',number:4},\n    {pose:'raised_hand',number:5}\n  ]\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      // console.log(hand);\n\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([\n          oneGesture,\n          fp.Gestures.VictoryGesture,\n          fpg.Gestures.okGesture,\n        //   fourGesture,\n          fpg.Gestures.raisedHandGesture,\n        ]);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n        //   console.log(gesture.gestures);\n\n          const confidence = gesture.gestures.map(\n            (prediction) => prediction.confidence\n          );\n          const maxConfidence = confidence.indexOf(\n            Math.max.apply(null, confidence)\n          );\n        //   console.log(gesture.gestures[maxConfidence].name);\n          PosesToNumber.forEach((item)=>{\n            if(item.pose === gesture.gestures[maxConfidence].name){\n                setNumber(item.number);\n            }\n          })\n          \n        }\n      }\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  const setFinalIngredients = () => {\n    let tempVariable;\n    if(selectedType === 'Grams (x100g)'){\n        tempVariable = selectedIngredient+\" \"+ 100*number+'g';\n    }\n    else if(selectedType === 'Grams (x50g)'){\n        tempVariable = selectedIngredient+\" \"+ 50*number+'g';\n    }\n    else if(selectedType === 'Mililitres (x50ml)'){\n        tempVariable = selectedIngredient+\" \"+ 50*number+'ml';\n    }\n    else{\n    tempVariable=selectedIngredient+\" \"+number+\" \"+selectedType;\n    }\n    console.log(tempVariable);\n    setIngredients([...ingredients,tempVariable]);\n    setSelectedIngredient(null);\n    setSelectedType(null);\n    setNumber(null);\n  }\n\n  useEffect(()=>{runHandpose()},[]);\n\n  return (\n        <div className=\"NextStep\">\n            <div className=\"Logo\">\n                <img src={logo} alt=\"Logo\" style={{width:'10%'}} />\n            </div>\n            <div style={{height:500,width:300,position:'absolute',right:10,border:'2px solid #B34D2D',display:'flex',flexDirection:'column',textAlign:'center'}}>\n                <div style={{color:'#B34D2D',fontSize:'20px'}}>Ingredients</div>\n                    {ingredients.map((ingredient)=>\n                        <div style={{color:'#B34D2D',marginTop:'30px'}} >{ingredient}</div>\n                     )}\n                 {state.length === ingredients.length &&  \n                    <Button type=\"primary\" \n                    style={{background:'#B34D2D',position:'absolute',bottom:0,width:'80%',margin:30}}>Set Instructions</Button>       \n                 }\n\n            </div>     \n            <div style={{color:'#B34D2D',fontSize:'20px',margin:20,fontWeight:500}}>\n                Input the amount of each ingredient.<br/> Select each ingredient and type of input.<br />\n                Input the number with your fingers.       \n            </div>\n            <div style={{color:'#426B1F',fontSize:'20px',margin:20}}>\n                Select the Ingredient     \n            </div>\n            {state.map((ingredient) =>\n                selectedIngredient === ingredient ? \n                <Button\n                    type=\"primary\" \n                    style={{background:'#426B1F',width:'150px',marginRight:'20px'}} \n                >{ingredient}\n                </Button>:     \n                <Button \n                    style={{color:'#426B1F',borderColor:'#426B1F',marginRight:'20px',width:'150px'}} \n                    onClick={()=>{setSelectedIngredient(ingredient);setSelectedType(null)}} >{ingredient}\n                 </Button>\n                \n            )}\n            {selectedIngredient && \n                <div>\n                    <div style={{color:'#426B1F',fontSize:'20px',margin:20}}>\n                        Select the Type     \n                    </div>\n                    <div style={{width:800,transform:'translate(40%)'}}>\n                    {Types.map((item)=>\n                    selectedType === item.type?\n                    <Button \n                        icon={item.icon} \n                        type=\"primary\"\n                        style={{background:'#426B1F',width:'150px',marginRight:'20px',marginTop:20}} >{item.type}</Button>:\n                    <Button     \n                        icon={item.icon} \n                        onClick={()=>setSelectedType(item.type)} \n                        style={{color:'#426B1F',borderColor:'#426B1F',marginRight:'20px',width:'150px',marginTop:20}}>{item.type}</Button>\n                    )}\n                    </div>\n                </div>\n            }\n\n\n\n            {selectedType !== null ? (\n                <div className=\"Canvas\">\n                    <Webcam\n                    ref={webcamRef}\n                    style={{\n                        position: \"absolute\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        left: 0,\n                        right: 0,\n                        textAlign: \"center\",\n                        zindex: 9,\n                        width: 640,\n                        height: 480,\n                    }}\n                    />\n            \n                    <canvas\n                    ref={canvasRef}\n                    style={{\n                        position: \"absolute\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        left: 0,\n                        right: 0,\n                        textAlign: \"center\",\n                        zindex: 9,\n                        width: 640,\n                        height: 480,\n                    }}\n                    />\n                    \n                    <Button \n                        icon={<PlusOutlined/>}\n                        style={{color:'#426B1F',borderColor:'#426B1F',marginRight:'20px',width:'150px',marginTop:20}}\n                        onClick={()=>setFinalIngredients()}>Add {number}</Button>\n                </div>\n            ):(\n                \"\"\n            )}\n        \n        </div>\n    \n  );\n}\n\nexport default NextStep;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}